{"version":3,"sources":["actions/index.js","reducers/index.js","containers/Channel.js","containers/Button.js","components/NewsItem.js","containers/TopNews.js","components/App.js","index.js"],"names":["requestPosts","type","receivedPosts","json","data","reducer","state","arguments","length","undefined","action","Object","objectSpread","channel","loading","Channel","_ref","channelName","channelString","onClick","active","react_default","a","createElement","className","style","backgroundColor","Button","connect","dispatch","ownProps","getPosts","mapDispatchToProps","fetch","method","headers","Access-Control-Allow-Origin","Content-Type","then","response","error","console","log","NewsItem","article","first_name","src","avatar","alt","description","TopNews","channels","topNews","map","index","key","concat","components_NewsItem","App","containers_Button","containers_TopNews","store","createStore","applyMiddleware","thunk","logger","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f29980e.chunk.js","sourcesContent":["export const SELECT_CHANNEL = 'SELECT_CHANNEL';\nexport const REQUEST_POSTS = 'REQUEST_POSTS';\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\n\nconst MY_API_KEY = 'c39a26d9c12f48dba2a5c00e35684ecc';\n\nexport const getChannel = channel => ({\n  type: SELECT_CHANNEL,\n  channel,\n});\n\nexport const requestPosts = () => ({\n  type: REQUEST_POSTS,\n});\n\nexport const receivedPosts = json => ({\n  type: RECEIVE_POSTS,\n  json: json.data,\n});\n\nexport function fetchPosts(channel) {\n  return function (dispatch) {\n    dispatch(requestPosts());\n    return fetch(`https://newsapi.org/v1/articles?source=${channel}&apiKey=${MY_API_KEY}`)\n      .then(\n      response => response.json(),\n      console.log('uiii'),\n      error => console.log('An error occurred.', error),\n    )\n      .then((json) => {\n        dispatch(receivedPosts(json));\n      },\n    );\n  };\n}\n\nexport function fetchLists() {\n  return function (dispatch) {\n    dispatch(requestPosts());\n    return fetch(`https://reqres.in/api/users?page=2`,{ \n  method: \"GET\",\n  headers: {\n    'Access-Control-Allow-Origin':'*',\n    \"Content-Type\": \"application/json\",\n\n  }})\n      .then(\n      response => response.json(),\n      error => console.log('An error occurred.', error),\n    ).then((data) => {\n       dispatch(receivedPosts(data));\n    console.log(data);\n})\n     \n  };\n}\n","import { SELECT_CHANNEL, REQUEST_POSTS, RECEIVE_POSTS } from '../actions';\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case SELECT_CHANNEL:\n      return { ...state, channel: action.channel };\n    case REQUEST_POSTS:\n      return { ...state, loading: true };\n    case RECEIVE_POSTS:\n      return { ...state, json: action.json, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getChannel, activateChannel } from '../actions'\n\nlet Channel = ({ channelName, channelString, onClick, active }) => (\n    <div  className=\" col-lg-2 col-md-4 col-sm-6 \">\n        <div className=\"channel-button\" onClick={onClick}\n            style={{ backgroundColor: active === channelString ? 'orange' : '' }}>\n            <p>{channelName}</p>\n        </div>\n    </div>\n)\n\n\nconst mapStateToProps = (state) => ({\n    active: state.channel\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => {\n        dispatch(getChannel(ownProps.channelString));\n    }\n})\n\nChannel = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Channel)\n\nexport default Channel;\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchLists } from '../actions'\n\nlet Button = ({ getPosts, channel }) => (\n  <button\n    onClick={() => { getPosts(channel) }}\n    className=\"btn btn-primary btn-lg btn-block\" >\n    Load Data\n  </button>\n\n);\n\nconst mapStateToProps = (state) => ({\n  channel: state.channel\n})\n\nconst mapDispatchToProps = {\n  getPosts: fetchLists\n}\n\nButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Button)\n\nexport default Button;\n","import React from 'react';\n\nconst NewsItem = ({ article }) => (\n  <article >\n    <div className=\"article-wrapper\">\n      <h3 className=\"text-center\">{article.first_name}</h3>\n      <img src={article.avatar} alt=\"\" />\n      <p className=\"text-center\">{article.description}</p>\n      \n    </div>\n  </article>\n);\n\nexport default NewsItem ;\n\n\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport  NewsItem  from '../components/NewsItem';\n\nlet TopNews = ({ channels, loading }) => {\n    let topNews = \"\";\n\n    if (channels) {\n        topNews = channels.map((article, index) =>\n            (\n                <div key={`${index}`} className=\"row\">\n                    <NewsItem article={channels[index]} />\n                </div>\n            )\n        )\n    }\n    if (loading) {\n        topNews = <h3 className=\"loading-indicator\">Loading ...</h3>\n    }\n\n    return (\n        <div>\n            {topNews}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    channels: state.json,\n    loading: state.loading\n})\n\nTopNews = connect(\n    mapStateToProps,\n    null\n)(TopNews)\n\nexport default TopNews;\n\n","import React from 'react'\nimport ChannelsField from './ChannelsField'\nimport Button from '../containers/Button'\nimport TopNews from '../containers/TopNews'\n//import Sari from '../containers/Sari'\n\nconst App = () => (\n  <div>\n    \n    <Button />\n    \n    <TopNews />\n\n  </div>\n)\n\nexport default App;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { logger } from 'redux-logger'\nimport reducer from './reducers'\nimport './css/styles.css'\nimport App from \"./components/App\"\n\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk, logger)\n)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}